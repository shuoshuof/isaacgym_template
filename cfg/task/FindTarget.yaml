# used to create the object
name: FindTarget

physics_engine: ${..physics_engine}

# if given, will override the device setting in gym.
#env:
#  numEnvs: 64
#  envSpacing: 4.0
#  maxVelocity: 10
#
#  numObservations: 4
#  numActions: 2
#
#  clipObservations: 1.0
#  clipActions: 1.0
#
#
#  # set to True if you use camera sensors in the environment
#  enableCameraSensors: False
env:
  numEnvs: ${resolve_default:4096,${...num_envs}}
  envSpacing: 5.  # [m]

  numObservations: 16 #
  numActions: 2 #[left_wheel_vel,right_wheel_vel]

  clipObservations: 5.0
  clipActions: 1.0

  asset:
    assetRoot: "./assets"
    assetFileName: "robot.urdf"

  plane:
    staticFriction: 1  # [-]
    dynamicFriction: 1  # [-]
    restitution: 0.        # [-]

  baseInitState:
    pos: [0.0, 0.0, 0.09] # x,y,z [m]
    rot: [0.0, 0.0, 0.0, 1.0] # x,y,z,w [quat]
    vLinear: [0.0, 0.0, 0.0]  # x,y,z [m/s]
    vAngular: [0.0, 0.0, 0.0]  # x,y,z [rad/s]

  # max vel is about 0.5, no y axis vel command
  randomCommandVelocityRanges:
    linear_x: [-0.5, 0.5] # min max [m/s]
    linear_y: [0., 0]   # min max [m/s]
    yaw: [-1., 1.]          # min max [rad/s]

  control:
    # PD Drive parameters:
    stiffness: 85.0  # [N*m/rad]
    damping: 2.0     # [N*m*s/rad]
    # max dof value is 10
    actionScale: 10  # -1,1 -> real value
    controlFrequencyInv: 1 # 60 Hz



  urdfAsset:
    collapseFixedJoints: True
    fixBaseLink: False
    defaultDofDriveMode: 4 # see GymDofDriveModeFlags (0 is none, 1 is pos tgt, 2 is vel tgt, 4 effort)

  learn:
    # rewards
    linearVelocityXYRewardScale: 1.0
    angularVelocityZRewardScale: 0.5
    torqueRewardScale: -0.000025

    # normalization
    linearVelocityScale: 1 # normalize vel of root to [-1,1]
    angularVelocityScale: 0.33 # normalize angular vel of root to [-3,3]
    dofPositionScale: 1.0
    dofVelocityScale: 0.1 # normalize dof velocity from [-10,10] to [-1,1]

    # episode length in seconds
    episodeLength_s: 50

  # viewer cam:
  viewer:
    refEnv: 0
    pos: [0, 0, 4]  # [m]
    lookat: [1., 1, 3.3]  # [m]

  # set to True if you use camera sensors in the environment
  enableCameraSensors: False


sim:
  dt: 0.02
  substeps: 2
  up_axis: "z"
  use_gpu_pipeline: ${eq:${...pipeline},"gpu"}
  gravity: [0.0, 0.0, -9.81]
  physx:
    num_threads: ${....num_threads}
    solver_type: ${....solver_type}
    use_gpu: ${contains:"cuda",${....sim_device}} # set to False to run on CPU
    num_position_iterations: 4
    num_velocity_iterations: 1
    contact_offset: 0.02
    rest_offset: 0.0
    bounce_threshold_velocity: 0.2
    max_depenetration_velocity: 100.0
    default_buffer_size_multiplier: 5.0
    max_gpu_contact_pairs: 8388608 # 8*1024*1024
    num_subscenes: ${....num_subscenes}
    contact_collection: 1 # 0: CC_NEVER (don't collect contact info), 1: CC_LAST_SUBSTEP (collect only contacts on last substep), 2: CC_ALL_SUBSTEPS (broken - do not use!)

task:
  randomize: False
  randomization_params: None
